name: Build Super AWS S3 and S3 compatible storage command line tool

on:
   push:
     branches:
       - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_push_dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DOckerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: cdfng/s9cmd:0.1.0
#          cache-from: type=registry,ref=docker.io/cdfng/nginx:1.21.3
#          cache-to: type=inline
  build_push_ghcr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        file: ./Dockerfile
        tags: ghcr.io/hoverhuang/s9cmd:0.1.0
  build:
    strategy:
      matrix:
        go-version: [1.22]
        arch: [amd64, arm64]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Get dependencies
      run: go mod download
    - name: Build
      run: go build -o s9cmd
    - name: Archive artifact
      run: zip -r s9cmd_${{ matrix.os }}_${{ matrix.arch }}.zip s9cmd
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: s9cmd_linux_${{ matrix.arch }}.zip
        path: s9cmd_linux_${{ matrix.arch }}.zip
